Index: tests/Features/FeaturesTestsSetup.php
===================================================================
diff --git a/tests/Features/FeaturesTestsSetup.php b/tests/Features/FeaturesTestsSetup.php
deleted file mode 100644
--- a/tests/Features/FeaturesTestsSetup.php	(revision 8ca75d282a378824228fd7b46e17318d633aeec8)
+++ /dev/null	(revision 8ca75d282a378824228fd7b46e17318d633aeec8)
@@ -1,51 +0,0 @@
-<?php
-
-
-namespace App\Tests\Features;
-
-
-use App\Entity\Comment;
-use App\Entity\Like;
-use App\Entity\Post;
-use App\Entity\User;
-use Liip\TestFixturesBundle\Services\DatabaseToolCollection;
-use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
-
-class FeaturesTestsSetup extends WebTestCase
-{
-    /**
-     * @var \Symfony\Bundle\FrameworkBundle\KernelBrowser
-     */
-    protected $client;
-    protected $doctrine;
-    protected $databaseTools;
-    protected $commentRepository;
-    protected $postRepository;
-    protected $userRepository;
-    protected $user;
-    protected $likeRepository;
-
-
-
-    protected function setUp(): void
-    {
-        self::ensureKernelShutdown();
-
-        $this->client = static::createClient();
-
-        $this->doctrine = static::getContainer()->get('doctrine')->getManager();
-
-
-        $this->databaseTools = static::getContainer()->get(DatabaseToolCollection::class)->get();
-        $this->databaseTools->loadAliceFixture([__DIR__."\UserFixtures.yaml"]);
-
-        $this->postRepository = $this->doctrine->getRepository(Post::class);
-        $this->likeRepository = $this->doctrine->getRepository(Like::class);
-        $this->userRepository = $this->doctrine->getRepository(User::class);
-        $this->commentRepository = $this->doctrine->getRepository(Comment::class);
-
-
-        parent::setUp(); // TODO: Change the autogenerated stub
-    }
-
-}
\ No newline at end of file
Index: tests/Features/LeaveALikeTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\n\r\nnamespace App\\Tests\\Features;\r\n\r\n\r\nuse App\\Entity\\Comment;\r\nuse App\\Entity\\Like;\r\nuse App\\Entity\\Post;\r\nuse App\\Entity\\User;\r\nuse Liip\\TestFixturesBundle\\Services\\DatabaseToolCollection;\r\nuse Symfony\\Bundle\\FrameworkBundle\\Test\\WebTestCase;\r\n\r\nclass LeaveALikeTest extends FeaturesTestsSetup\r\n{\r\n\r\n    /**\r\n     * @test\r\n     * @group integration\r\n     */\r\n    public function test_non_logged_in_client_cannot_like_a_post(){\r\n        //GET SINGLE PAGE\r\n        $this->client->request(\"GET\", \"post/1\");\r\n\r\n        $this->assertResponseStatusCodeSame(200);\r\n\r\n\r\n        //TEST Like Button not there\r\n        $this->assertSelectorNotExists(\"button\", \"Like\");\r\n        $this->assertSelectorExists(\"p\", \"Connectez-vous et aimez ce post !\");\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * @test\r\n     * @group integration\r\n     */\r\n    public function test_user_like_post_or_not(){\r\n        $user2 = $this->userRepository->find(1);\r\n        $user3 = $this->userRepository->find(3);\r\n\r\n        $post = $this->postRepository->find(1);\r\n\r\n\r\n        //Check user 2 likes post => Return True\r\n        $this->assertEquals(true, $this->likeRepository->checkLike($post, $user2));\r\n\r\n        //Check user 3 does not likes post => Return false\r\n        $this->assertEquals(false, $this->likeRepository->checkLike($post, $user3));\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * @test\r\n     * @group integration\r\n     */\r\n    public function test_user_can_leave_a_like_or_remove_it(){\r\n\r\n        // User 3 does not likes the post\r\n        $this->user = $this->userRepository->find(3);\r\n        $this->client->loginUser($this->user);\r\n\r\n        // Find a Post\r\n        $id = 1;\r\n        $post = $this->postRepository->find($id);\r\n\r\n\r\n        $likes  = $this->likeRepository->countLikesOnPost($post->getId());\r\n\r\n        // REQUEST SINGLE PAGE POST\r\n        $crawler = $this->client->request(\"GET\", \"post/$id\");\r\n\r\n\r\n\r\n        //Check Likes count initially\r\n        $this->assertSame(2, $likes);\r\n        $this->assertSelectorTextContains(\"h5\", \"2 likes\");\r\n\r\n\r\n        // CLICK ON LIKE AND CHECK CHANGES\r\n        $likeButton = $crawler->selectLink(\"Like\")->link();\r\n        $this->client->click($likeButton);\r\n        $this->client->followRedirects();\r\n\r\n        $newCount = $likes+1;\r\n        $likesCount =  $this->likeRepository->countLikesOnPost(1);\r\n        $this->assertSame($newCount, $likesCount);\r\n\r\n\r\n        //CLICK AGAIN AND CHECK IF POST IS UNLIKED\r\n        $newCount --;\r\n        $this->client->click($likeButton);\r\n        $this->client->followRedirects();\r\n        $likesCount =  $this->likeRepository->countLikesOnPost(1);\r\n        $this->assertSame($newCount, $likesCount);\r\n    }\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/Features/LeaveALikeTest.php b/tests/Features/LeaveALikeTest.php
--- a/tests/Features/LeaveALikeTest.php	(revision 8ca75d282a378824228fd7b46e17318d633aeec8)
+++ b/tests/Features/LeaveALikeTest.php	(date 1650984868457)
@@ -11,8 +11,40 @@
 use Liip\TestFixturesBundle\Services\DatabaseToolCollection;
 use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
 
-class LeaveALikeTest extends FeaturesTestsSetup
+class LeaveALikeTest extends WebTestCase
 {
+    /**
+     * @var \Symfony\Bundle\FrameworkBundle\KernelBrowser
+     */
+    private $client;
+    private $doctrine;
+    private $databaseTools;
+    protected $commentRepository;
+    private $postRepository;
+    protected $userRepository;
+    private $user;
+    private $likeRepository;
+
+
+    protected function setUp(): void
+    {
+        $this->client = static::createClient();
+
+        $this->doctrine = static::getContainer()->get('doctrine')->getManager();
+
+        $this->commentRepository = $this->doctrine->getRepository(Comment::class);
+
+
+        $this->databaseTools = static::getContainer()->get(DatabaseToolCollection::class)->get();
+
+
+        $this->databaseTools->loadAliceFixture([__DIR__."\UserFixtures.yaml"]);
+
+        $this->postRepository = $this->doctrine->getRepository(Post::class);
+        $this->likeRepository = $this->doctrine->getRepository(Like::class);
+        $this->userRepository = $this->doctrine->getRepository(User::class);
+
+    }
 
     /**
      * @test
Index: tests/Features/LeaveCommentTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\n\r\nnamespace App\\Tests\\Features;\r\n\r\n\r\nuse App\\Entity\\Comment;\r\nuse App\\Entity\\Post;\r\nuse App\\Entity\\User;\r\nuse Liip\\TestFixturesBundle\\Services\\DatabaseToolCollection;\r\nuse Symfony\\Bundle\\FrameworkBundle\\Test\\WebTestCase;\r\n\r\nclass LeaveCommentTest extends FeaturesTestsSetup\r\n{\r\n\r\n\r\n    /**\r\n     * @test\r\n     * @group integration\r\n     */\r\n    public function test_a_user_logged_in_can_reply(){\r\n\r\n        //LOGIN USER\r\n        $user = $this->userRepository->find(1);\r\n        $this->client->loginUser($user);\r\n\r\n        //FIND A POST PAGE\r\n        $post = $this->postRepository->find(1);\r\n        $postId = $post->getId();\r\n        $url = \"post/$postId\";\r\n\r\n\r\n        $this->client->request(\"GET\", \"post/$postId\");\r\n\r\n\r\n        //Check if reply form\r\n        $this->assertSelectorExists(\"h2\", \"Repondre au post\");\r\n    }\r\n\r\n\r\n    /**\r\n     * @test\r\n     * @group integration\r\n     */\r\n    public function test_anonymous_user_can_not_reply(){\r\n\r\n/*        //LOGIN USER\r\n        $user = $this->userRepository->find(1);\r\n        $this->client->loginUser($user);*/\r\n\r\n\r\n\r\n        //FIND A POST PAGE\r\n        $post = $this->postRepository->find(1);\r\n        $postId = $post->getId();\r\n\r\n\r\n\r\n        $this->client->request(\"GET\", \"post/$postId\");\r\n        $this->assertResponseStatusCodeSame(200);\r\n\r\n        //Check if reply form\r\n//        $this->assertSelectorNotExists(\"h2\", \"Repondre au post\");\r\n        $this->assertSelectorExists(\"p\", \"Vous devez vous connecter pour rÃ©pondre\");\r\n    }\r\n\r\n\r\n    /**\r\n     * @test\r\n     * @group integration\r\n     */\r\n    public function test_comment_is_left_on_post(){\r\n        //LOGIN USER\r\n        $user = $this->userRepository->find(1);\r\n        $this->client->loginUser($user);\r\n\r\n        //GET PAGE\r\n        $crawler = $this->client->request(\"GET\", \"post/1\");\r\n        $form = $crawler->selectButton(\"Send\")->form([\r\n            \"comment_form[content]\" => \"Test Submit\"\r\n        ]);\r\n\r\n        //SEND Comment\r\n        $this->client->submit($form);\r\n        $this->client->followRedirect();\r\n        //Check if reply appear in Post page\r\n        $comments =  $crawler->filter(\"#comment\");\r\n\r\n\r\n        $nbComments = $this->count($comments);\r\n\r\n\r\n        $this->assertEquals(1, $nbComments);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/Features/LeaveCommentTest.php b/tests/Features/LeaveCommentTest.php
--- a/tests/Features/LeaveCommentTest.php	(revision 8ca75d282a378824228fd7b46e17318d633aeec8)
+++ b/tests/Features/LeaveCommentTest.php	(date 1650984868459)
@@ -10,8 +10,34 @@
 use Liip\TestFixturesBundle\Services\DatabaseToolCollection;
 use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
 
-class LeaveCommentTest extends FeaturesTestsSetup
+class LeaveCommentTest extends WebTestCase
 {
+    /**
+     * @var \Symfony\Bundle\FrameworkBundle\KernelBrowser
+     */
+    private $client;
+    private $commentRepository;
+    private $databaseTools;
+    private $postRepository;
+    private $userRepository;
+    private $doctrine;
+
+    protected function setUp(): void
+    {
+        $this->client = static::createClient();
+
+        $this->doctrine = static::getContainer()->get('doctrine')->getManager();
+
+        $this->commentRepository = $this->doctrine->getRepository(Comment::class);
+
+        $this->databaseTools = static::getContainer()->get(DatabaseToolCollection::class)->get();
+
+        $this->databaseTools->loadAliceFixture([__DIR__."\UserFixtures.yaml"]);
+
+        $this->postRepository = $this->doctrine->getRepository(Post::class);
+
+        $this->userRepository= $this->doctrine->getRepository(User::class);
+    }
 
 
     /**
Index: tests/Features/FindUserPostsTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\n\r\nnamespace App\\Tests\\Features;\r\n\r\n\r\nuse App\\Entity\\Post;\r\nuse App\\Entity\\User;\r\nuse Liip\\TestFixturesBundle\\Services\\DatabaseToolCollection;\r\nuse Symfony\\Bundle\\FrameworkBundle\\Test\\WebTestCase;\r\n\r\nclass FindUserPostsTest extends FeaturesTestsSetup\r\n{\r\n\r\n\r\n    /**\r\n     * @test\r\n     * @group integration\r\n     */\r\n    public function test_get_all_user_post(){\r\n        $view = $this->postRepository->findBy([\r\n            \"auteur\" => 1\r\n        ]);\r\n\r\n        $crawler = $this->client->request(\"GET\", \"/posts/user/1\");\r\n\r\n\r\n        // GET ALL Messages\r\n       $posts = $crawler->filter(\"div.single-post\");\r\n\r\n        //TEST Number of messages in this page\r\n        $this->assertCount(5, $posts);\r\n\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/Features/FindUserPostsTest.php b/tests/Features/FindUserPostsTest.php
--- a/tests/Features/FindUserPostsTest.php	(revision 8ca75d282a378824228fd7b46e17318d633aeec8)
+++ b/tests/Features/FindUserPostsTest.php	(date 1650984868454)
@@ -9,8 +9,37 @@
 use Liip\TestFixturesBundle\Services\DatabaseToolCollection;
 use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
 
-class FindUserPostsTest extends FeaturesTestsSetup
+class FindUserPostsTest extends WebTestCase
 {
+    protected $databaseTool;
+
+    protected $doctrine;
+
+    protected $userRepository;
+
+    protected $postRepository;
+    protected $client;
+
+    protected function setUp(): void
+    {
+        $this->client = static::createClient();
+        $this->databaseTool = static::getContainer()->get(DatabaseToolCollection::class)->get();
+        self::bootKernel();
+
+
+
+        $this->doctrine = static::getContainer()->get('doctrine')->getManager();
+
+        /*        $this->entityManager = $kernel->getContainer()->get('doctrine')->getManager();*/
+
+
+        $user= $this->databaseTool->loadAliceFixture([__DIR__."\UserFixtures.yaml"]);
+
+        $this->userRepository= $this->doctrine->getRepository(User::class);
+        $this->postRepository= $this->doctrine->getRepository(Post::class);
+
+    }
+
 
 
     /**
Index: tests/Features/CreatePostTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\n\r\nnamespace App\\Tests\\Features;\r\n\r\n\r\nuse App\\Entity\\Post;\r\nuse App\\Entity\\User;\r\nuse App\\Tests\\DatabaseDependenciesTestCase;\r\nuse App\\Tests\\DatabasePrimer;\r\nuse Doctrine\\ORM\\EntityManager;\r\nuse Liip\\TestFixturesBundle\\Services\\DatabaseToolCollection;\r\nuse Symfony\\Bundle\\FrameworkBundle\\KernelBrowser;\r\nuse Symfony\\Bundle\\FrameworkBundle\\Test\\WebTestCase;\r\n\r\nclass CreatePostTest extends FeaturesTestsSetup\r\n{\r\n\r\n\r\n    /**\r\n     * @test\r\n     * @group integration\r\n     */\r\n    public function test_if_post_is_created_by_a_user_and_display(){\r\n\r\n        //GET USER\r\n        $user = $this->userRepository->find(1);\r\n        $this->client->loginUser($user);\r\n        //Get New post Page\r\n        $crawler = $this->client->request(\"GET\", \"create-post\");\r\n\r\n        $this->assertResponseStatusCodeSame(200);\r\n\r\n\r\n        $form = $crawler->selectButton(\"Save\")->form([\r\n           \"post[title]\" => \"Test post\",\r\n           \"post[content]\" => \"Very happy\",\r\n        ]);\r\n        $this->assertNotNull($form);\r\n        //Send the Post\r\n        $this->client->submit($form);\r\n\r\n\r\n        //Redirect and check if post is there\r\n        $this->client->followRedirect();\r\n/*        $newPost=  $crawler->filter(\".post\");*/\r\n\r\n        $this->assertSelectorExists(\"h3\", \"Test post\");\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/Features/CreatePostTest.php b/tests/Features/CreatePostTest.php
--- a/tests/Features/CreatePostTest.php	(revision 8ca75d282a378824228fd7b46e17318d633aeec8)
+++ b/tests/Features/CreatePostTest.php	(date 1650984868450)
@@ -13,9 +13,45 @@
 use Symfony\Bundle\FrameworkBundle\KernelBrowser;
 use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
 
-class CreatePostTest extends FeaturesTestsSetup
+class CreatePostTest extends WebTestCase
 {
 
+    protected $databaseTool;
+
+    protected $doctrine;
+
+    protected $userRepository;
+    /**
+     * @var KernelBrowser
+     */
+    private $client;
+
+
+    protected function setUp(): void
+    {
+
+        self::ensureKernelShutdown();
+
+        $this->client = static::createClient();
+
+/*        self::bootKernel();*/
+
+        $this->databaseTool = static::getContainer()->get(DatabaseToolCollection::class)->get();
+
+        $this->doctrine = static::getContainer()->get('doctrine')->getManager();
+
+/*        $this->entityManager = $kernel->getContainer()->get('doctrine')->getManager();*/
+
+
+        $this->databaseTool->loadAliceFixture([__DIR__."\UserFixtures.yaml"]);
+
+        $this->userRepository= $this->doctrine->getRepository(User::class);
+
+
+        $user = $this->userRepository->find(1);
+        $this->client->loginUser($user);
+
+    }
 
     /**
      * @test
@@ -25,7 +61,7 @@
 
         //GET USER
         $user = $this->userRepository->find(1);
-        $this->client->loginUser($user);
+
         //Get New post Page
         $crawler = $this->client->request("GET", "create-post");
 
